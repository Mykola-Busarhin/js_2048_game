{"version":3,"sources":["scripts/main.js"],"names":["direction","gameSize","startBtn","document","querySelector","startMessage","loseMessage","winMessage","scoreField","score","gameSquare","generateNewNumber","randomRow","Math","floor","random","randomCell","fillGameField","gameBoard","gameBoardCells","rows","a","push","cells","row","column","gameValue","arrayValue","innerText","classList","value","add","newGame","compareGameBoards","prevBoardGame","currentBoardGame","r","c","moveCellsLeft","array","removeZeros","collection","filter","item","copy","i","length","moveRowsLeft","moveRowsRight","reverse","moveVertically","newRow","moveRowsUp","moveRowsDown","isGameOver","col","isGameWon","cell","remove","addEventListener","replace","e","pressedKey","code","isZeroAvailable","every","el","newBoard","JSON","parse","stringify"],"mappings":"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","file":"main.814e3e1b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameSize = 4;\nconst startBtn = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst scoreField = document.querySelector('.game-score');\nlet score = 0;\nlet direction;\nlet gameSquare = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nstartBtn.addEventListener('click', () => {\n  newGame();\n\n  if (startBtn.innerText === 'Start') {\n    startBtn.innerText = 'Restart';\n    startBtn.classList.replace('start', 'restart');\n  }\n\n  startMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n});\n\nfunction generateNewNumber() {\n  const randomRow = Math.floor(Math.random() * gameSize);\n  const randomCell = Math.floor(Math.random() * gameSize);\n\n  if (gameSquare[randomRow][randomCell] === 0) {\n    gameSquare[randomRow][randomCell] = Math.random() > 0.1 ? 2 : 4;\n  } else {\n    generateNewNumber();\n  }\n}\n\nfunction fillGameField() {\n  const gameBoard = document.querySelector('.game-field');\n  const rows = [...gameBoard.rows];\n  const gameBoardCells = [];\n\n  for (const a of rows) {\n    gameBoardCells.push([...a.cells]);\n  }\n\n  for (let row = 0; row < gameSize; row++) {\n    for (let column = 0; column < gameSize; column++) {\n      const gameValue = gameBoardCells[row][column];\n      const arrayValue = gameSquare[row][column];\n\n      gameValue.innerText = arrayValue === 0 ? '' : arrayValue;\n      gameValue.classList.value = '';\n\n      gameValue.classList.add(\n        'field-cell',\n        `field-cell--${gameValue.innerText}`\n      );\n    }\n  }\n}\n\nfunction newGame() {\n  const initialField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  gameSquare = initialField;\n\n  score = 0;\n  scoreField.innerText = score;\n  generateNewNumber();\n  generateNewNumber();\n\n  fillGameField();\n  fillGameField();\n}\n\ndocument.addEventListener('keydown', (e) => {\n  const pressedKey = e.code;\n  const isZeroAvailable\n  = gameSquare.every((row) => row.every((el) => el !== 0));\n  const newBoard = JSON.parse(JSON.stringify(gameSquare));\n\n  switch (pressedKey) {\n    case 'ArrowRight':\n      moveRowsRight();\n      break;\n\n    case 'ArrowLeft':\n      moveRowsLeft();\n      break;\n\n    case 'ArrowUp':\n      moveRowsUp();\n      break;\n\n    case 'ArrowDown':\n      moveRowsDown();\n      break;\n  }\n\n  if (!isZeroAvailable && compareGameBoards(gameSquare, newBoard)) {\n    generateNewNumber();\n  }\n\n  fillGameField();\n\n  if (isGameOver()) {\n    loseMessage.classList.remove('hidden');\n  };\n\n  isGameWon();\n});\n\nfunction compareGameBoards(prevBoardGame, currentBoardGame) {\n  for (let r = 0; r < gameSize; r++) {\n    for (let c = 0; c < gameSize; c++) {\n      if (prevBoardGame[r][c] !== currentBoardGame[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction moveCellsLeft(array) {\n  function removeZeros(collection) {\n    return collection.filter((item) => item !== 0);\n  }\n\n  let copy = [...array];\n\n  copy = removeZeros(copy);\n\n  for (let i = 0; i < copy.length - 1; i++) {\n    if (copy[i] === copy[i + 1]) {\n      copy[i] *= 2;\n      copy[i + 1] = 0;\n      score += copy[i];\n      scoreField.innerText = score;\n    }\n  }\n\n  copy = removeZeros(copy);\n\n  while (copy.length < gameSize) {\n    copy.push(0);\n  }\n\n  return copy;\n}\n\nfunction moveRowsLeft() {\n  for (let i = 0; i < gameSize; i++) {\n    gameSquare[i] = moveCellsLeft(gameSquare[i], gameSize);\n  }\n\n  return gameSquare;\n}\n\nfunction moveRowsRight() {\n  for (let i = 0; i < gameSize; i++) {\n    gameSquare[i].reverse();\n    gameSquare[i] = moveCellsLeft(gameSquare[i], gameSize);\n    gameSquare[i].reverse();\n  }\n\n  return gameSquare;\n}\n\nfunction moveVertically() {\n  for (let i = 0; i < gameSize; i++) {\n    let newRow = [gameSquare[0][i],\n      gameSquare[1][i],\n      gameSquare[2][i],\n      gameSquare[3][i]];\n\n    if (direction === 'up') {\n      newRow = moveCellsLeft(newRow, gameSize);\n    } else if (direction === 'down') {\n      newRow.reverse();\n      newRow = moveCellsLeft(newRow, gameSize);\n      newRow.reverse();\n    }\n    gameSquare[0][i] = newRow[0];\n    gameSquare[1][i] = newRow[1];\n    gameSquare[2][i] = newRow[2];\n    gameSquare[3][i] = newRow[3];\n  };\n\n  return gameSquare;\n}\n\nfunction moveRowsUp() {\n  direction = 'up';\n  moveVertically();\n}\n\nfunction moveRowsDown() {\n  direction = 'down';\n  moveVertically();\n}\n\nfunction isGameOver() {\n  for (let row = 0; row < gameSquare.length; row++) {\n    for (let col = 0; col < gameSquare.length; col++) {\n      if (gameSquare[row][col] === 0) {\n        return false;\n      }\n    }\n  }\n\n  for (let row = 0; row < gameSize; row++) {\n    for (let col = 0; col < gameSize - 1; col++) {\n      if (gameSquare[row][col] === gameSquare[row][col + 1]\n        || gameSquare[col][row] === gameSquare[col + 1][row]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isGameWon() {\n  for (const row of gameSquare) {\n    for (let cell = 0; cell < gameSize; cell++) {\n      if (row[cell] === 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n"]}